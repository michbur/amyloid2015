\documentclass[10pt]{beamer}
\usetheme{Warsaw}
\usepackage{graphicx}
\usepackage{amsfonts}
\usepackage{indentfirst}
\usepackage{amsmath}
\usepackage[polish]{babel}
\usepackage{polski}
\usepackage[utf8]{inputenc}
\usepackage{natbib}


\usepackage{tikz}
\usepackage{ifthen}
\usepackage{xxcolor}
\usetikzlibrary{arrows}
\usetikzlibrary[topaths]
\usetikzlibrary{decorations.pathreplacing}
%\usepackage{times}\usefonttheme{professionalfonts}  % times is obsolete
\usefonttheme[onlymath]{serif}
\boldmath



\frenchspacing

\setbeamertemplate{caption}{\centering\insertcaption\par}
\setlength{\belowcaptionskip}{15pt}
\renewcommand{\thetable}{}

\providecommand{\e}[1]{\ensuremath{\times 10^{#1}}}

\begin{document}


\date{}
\author{Michał  Burdukiewicz\inst{1}, Piotr Sobczyk\inst{2}, Paweł Mackiewicz\inst{1}}
\institute{ 
\inst{1} Zakład Genomiki, Uniwersytet Wrocławski
\and 
\inst{2} Instytut Matematyki i Informatyki, Politechnika Wrocławska}

\title{n-gramy w analizie sekwencji biologicznych}

\begin{frame}
\maketitle
\end{frame}

\begin{frame}
\frametitle{Outline}
\tableofcontents
\end{frame}






\section{n-gramy (k-mery)}

\subsection{n-gramy (k-mery)}

\AtBeginSection[]
{
\begin{frame}<beamer>
\frametitle{Outline}
\tableofcontents[currentsection]
\end{frame}
}

\begin{frame}
n-gramy (k-mery, k-tuple) to wektory o długości $n$ zawierające znaki z sekwencji wejściowych.

\vspace{2cm}

Pierwotnie analiza n-gramów rozwijana była na potrzeby analizy języka naturalnego, ale ma również zastosowania w genomice~\citep{fang2011}, transkryptomice~\citep{wang2014} i proteomice~\citep{guo2014}.

\end{frame}

\begin{frame}



<<echo = FALSE,message=FALSE,results='asis'>>=
library(reshape2)
library(ggplot2)
library(grid)
library(biogram)
library(xtable)
library(seqinr)

theme_presentation <- theme(plot.background=element_rect(fill = "transparent",
                                                   colour = "transparent"),
                      plot.margin = unit(c(1,1,1,1), "cm"),
                      axis.text.x = element_text(size=8), 
                      axis.text.y = element_text(size=8),
                      axis.title.x = element_text(size=12, vjust = -1), 
                      axis.title.y = element_text(size=12, vjust = 1),
                      strip.text = element_text(size=12),
                      legend.text = element_text(size=8), 
                      legend.title = element_text(size=12),
                      plot.title = element_text(size=19),
                      panel.grid.major = element_line(colour="lightgrey", linetype = "dashed"),
                      panel.background = element_rect(fill = "transparent",colour = "black"),
                      legend.background = element_rect(fill="NA"))


set.seed(1)
sample_seq <- matrix(sample(c("A", "C", "G", "T"), 18, replace = TRUE), nrow = 3)
colnames(sample_seq) <- paste0("P", 1L:ncol(sample_seq))
rownames(sample_seq) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(data.frame(sample_seq), caption = "Przykładowe sekwencje.  S - sekwencje, P - pozycja nukleotydu.", digits = 0))
@


  
<<echo = FALSE,message=FALSE,results='asis'>>=
unis <- count_ngrams(sample_seq, 1, c("A", "C", "G", "T"))
unis <- data.frame(as.matrix(unis))
colnames(unis) <- c("A", "C", "G", "T")
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis, caption = "Zliczenia 1-gramów.", digits = 0), include.rownames = TRUE)
@

\end{frame}

\begin{frame}

<<echo = FALSE,message=FALSE,results='asis'>>=
print(xtable(data.frame(sample_seq), caption = "Przykładowe sekwencje.  S - sekwencje, P - pozycja nukleotydu.", digits = 0))
@
  

  
<<echo = FALSE,message=FALSE,results='asis'>>=
unis <- count_ngrams(sample_seq, 2, c("A", "C", "G", "T"))
unis <- data.frame(as.matrix(unis))

colnames(unis) <- sapply(colnames(unis), function(i) 
                         paste0(substr(i, 0, 1), substr(i, 3, 3)))

#colnames(unis) <- c("A", "C", "G", "T")
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis[, 1L:8], caption = "Zliczenia 2-gramów (fragment tabeli).", digits = 0), include.rownames = TRUE)
@

\end{frame}

\begin{frame}
$$n_\text{max} = u^n$$

$n_\text{max}$: liczba wszystkich możliwych n-gramów

$u$: liczba liter w alfabecie.

$n$: długość n-gramu

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,results='asis',fig.height=5.5>>=
n <- 1:6
n_max <- 4^n

dat <- data.frame(n, n_max)
ggplot(dat, aes(x = n, y = n_max)) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=4, shape=21, fill = "black") +
  scale_x_continuous(breaks = 0L:6) +
  scale_y_continuous(expression(n["max"])) + 
  theme_presentation
@

\end{frame}

\subsection{Informacja o pozycji}

\begin{frame}

n-gramy mogą być przypisaną informację o pozycjach na których występują.

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,results='asis'>>=
print(xtable(data.frame(sample_seq), caption = "Przykładowe sekwencje.  S - sekwencje, P - pozycja nukleotydu.", digits = 0))
@
  

  
<<echo = FALSE,message=FALSE,results='asis'>>=
unis <- count_ngrams(sample_seq, 2, c("A", "C", "G", "T"), pos = TRUE)
unis <- data.frame(as.matrix(unis))

colnames(unis) <- substr(colnames(unis), 2, 6)

#colnames(unis) <- c("A", "C", "G", "T")
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis[, 1L:8], caption = "Zliczenia 2-gramów z informacją o pozycji (fragment tabeli).", digits = 0), include.rownames = TRUE)
@

\end{frame}

\begin{frame}
$$n_\text{max} = p \times u^n$$

$n_\text{max}$: liczba wszystkich możliwych n-gramów

$p$: liczba możliwych pozycji.

$u$: liczba liter w alfabecie.

$n$: długość n-gramu

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,results='asis',fig.height=5.5>>=
dat <- melt(sapply(c(1, 2:5*5), function(i) i * n_max))
dat[["Var2"]] <- factor(dat[["Var2"]])
levels(dat[["Var2"]]) <- c(1, 2:5*5)
colnames(dat) <- c("n", "p", "n_max")
ggplot(dat, aes(x = n, y = n_max, fill = p, col = p)) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=4, shape=21) +
  scale_x_continuous(breaks = 0L:6) +
  scale_y_continuous(expression(n["max"])) + 
  theme_presentation
@
\end{frame}

\subsection{Nieciągłe n-gramy}

\begin{frame}

n-gramy mogą być nieciągłe - pomiędzy elementami n-gramu mogą występować przerwy.

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,results='asis'>>=
print(xtable(data.frame(sample_seq), caption = "Przykładowe sekwencje.  S - sekwencje, P - pozycja nukleotydu.", digits = 0))
@
  

  
<<echo = FALSE,message=FALSE,results='asis'>>=
unis <- count_ngrams(sample_seq, 2, c("A", "C", "G", "T"), d = 1)
unis <- data.frame(as.matrix(unis))

colnames(unis) <- decode_ngrams(colnames(unis))

#colnames(unis) <- c("A", "C", "G", "T")
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis[, 1L:8], caption = "Zliczenia 2-gramów z przerwą 1 (fragment tabeli).", digits = 0), include.rownames = TRUE)
@

\end{frame}

\subsection{Wybór informatywnych n-gramów - QuiPT}

\begin{frame}

Wielowymiarowa przestrzeń atrybutów jest filtrowana z pomocą QuiPT (\textbf{Qui}ck \textbf{P}ermutation \textbf{T}est) łączącego zalety testów permutacyjnych (brak założeń) z szybkością wykonania.

\end{frame}

\begin{frame}
W trakcie testu permutacyjnego oznaczenia klas są losowo mieszane na potrzeby obliczania statystyki testowej.
    
\begin{center}
\scalebox{0.85}{
$      
\textnormal{p-value} = \frac{N_{T_P > T_R}}{N}
$
}
\end{center}

gdzie $N_{T_P > T_R}$ to liczba losowań, kiedy $T_P$ (permutowana statystyka testowa) miała wartość krytyczniejszą niż $T_R$ (statystyka testowa dla niepermutowanych danych).
      
\end{frame}


\section{signalHSMM}

\subsection{Peptydy sygnałowe}

\begin{frame}

\begin{figure}[ht]
        \centering
        \scalebox{0.4}{
          \includegraphics{SP.png}
        }
\end{figure}

      \begin{itemize}
        \item n-region: głównie zasadowe aminokwasy~\citep{nielsen_prediction_1998},
        \item h-region: silnie hydrofobowe reszty aminokwasy~\citep{nielsen_prediction_1998},
        \item c-region: kilka polarnych aminokwasów bez ładunku~\citep{jain_signal_1994}.
      \end{itemize}


\end{frame}

\begin{frame}

Istnieje szereg programów przewidujących występowanie peptydu sygnałowego:
\begin{itemize}
\item signalP 4.1 (sieci neuronowe)~\citep{petersen_signalp_2011},
\item PrediSi (Position Weight Matrix)~\citep{hiller_predisi:_2004},
\item Signal-3L (k-najbliszych sąsiadów)~\citep{shen_signal-3l:_2007},
\item Phobius (ukryte modele Markowskie)~\citep{kall_combined_2004}.
\end{itemize}

\end{frame}

\subsection{Ukryte modele semi-Markowskie}


\begin{frame}
      Założenia modelu:
      \begin{itemize}
        \item obserwowany rozkład aminokasów jest wynika z przebywania w określonym regionie (stanie),
        \item długość regionu (czas trwania stanu) jest modelowana poprzez rozkład prawdopodobieństwa (inny niż rozkład geometryczny jak w ukrytych modelach Markowskich).
      \end{itemize}
    \end{frame}

    
    \begin{frame}
      \begin{enumerate}[1.]
        \item Pozyskanie eukariotycznych białek z bazy UniProtKB 2014\_07 (po ocyszczeniu z nietypowych lub niedokładnie opisanych rekordów zbiór danych liczy 3816 białek z peptydem sygnałowym i 9795 białek bez peptydu sygnałowego),
        \item określenie granic n-, h- i c-regionów przez algorytm heurystyczny,
        \item redukcja wymiarowości problemu poprzez zagregowanie aminokwasów na podstawie ich właściwości fizykochemicznych do kilku grup,
        \item obliczenie częstości występowania grup aminokwasowych w danych regionie oraz długości regionów,
        \item uczenie dwóch HSMM dla białek z peptydem sygnałowym i bez peptydu sygnałowego.
      \end{enumerate} 
    \end{frame}



\begin{frame}
    Podczas testowania, każde białko jest dopasowane do dwóch HSMM, które modelują odpowiednio białka bez peptydu sygnałowego i z peptydem sygnałowym. Prawdopodobieństwo obu dopasowań stanowią wynik działania programu.
    \begin{figure}
    \centering
    \resizebox{8.5cm}{!}{%
    \begin{tikzpicture}[->,>=stealth',shorten >=2pt,auto,node distance=4.5cm, thick]
      \tikzstyle{line} = [draw=black, color=blue!30!black!50, line width=4.5mm, -latex']
      \tikzstyle{main node} = [circle,fill=blue!20,draw, minimum size = 2.2cm, font=\itshape,
         align=center,  top color=white, bottom color=blue!50!black!70 ] %font=\sffamily\small\bfseries,
      %nodes
      \node[main node]            (start') 	[]						{Start};	     
      \node[main node, bottom color=purple!70!black!70] 	(nregion') 	[right of=start',xshift=-5mm, yshift=15mm] 	{n-region};
      \node[main node, bottom color=pink!70!black!70] 	(hregion') 	[right of=nregion',xshift=-5mm,yshift=15mm] 	{h-region};
      \node[main node, bottom color=gray!70!black!70] 	(cregion') 	[right of=hregion',xshift=-5mm,yshift=-15mm] 	{c-region};
      \node[main node, bottom color=green!70!black!70] 	(mature') 	[right of=cregion',xshift=-5mm, yshift=-15mm] 	{Mature protein};
      
      %lines
      \path [line] (start')   edge node [left, color=black] {} (nregion');
      \path [line] (nregion') edge node [below, color=black] { } (hregion');
      \path [line] (hregion') edge node [below, color=black] { } (cregion');
      \path [line] (cregion') edge node [left, color=black] { } (mature');
      \draw [line] (start') to[out=340,in=200] (mature');
    \end{tikzpicture} }
    \end{figure}


    \end{frame}

\subsection{Porównanie z innymi programami}

\begin{frame}
    Zbiór danych do analizy porównawczej: 140 eukariotycznych białek z peptydem sygnałowym i 280 losowo wybranych eukariotycznych bialek bez peptydu sygnałowego dodanych po 2010 do bazy UniProt.
    
    \vspace{.5cm}
    
    signal.hsmm1987: wytrenowany na zbiorze 496 eukariotycznych białek z peptydem sygnałowym dodanych do bazy przed 1987.
    
    \vspace{.5cm}
    
    signal.hsmm2010: wytrenowany na zbiorze 3676 eukariotycznych białek z peptydem sygnałowym dodanych do bazy przed 2010.
    \end{frame}



    \begin{frame}
      \begin{table}[ht]
\centering
\begin{tabular}{rcccc}
  \hline
 & AUC & H-measure & Gini index\\ 
  \hline
Phobius & 0.9643 & 0.8844 & 0.9286\\ 
  PrediSi & 0.9411 & 0.8238 & 0.8821\\ 
  signalP 4.1 (no tm) & 0.9679 & 0.8909 & 0.9357\\ 
  signalP 4.1 (tm) & 0.9750 & 0.9261 & 0.9500\\ 
  signalhsmm2010 & 0.9893 & 0.8963 & 0.9786\\ 
  signalhsmm1987 & 0.9889 & 0.8994 & 0.9778\\ 
   \hline
\end{tabular}
\end{table}
    \end{frame}


\section{Amyloidy}

\subsection{Zbiór danych}

\begin{frame}

Zbiór danych: 146 amyloidów i 290 nieamyloidów~\citep{kotulska2014}.

<<echo = FALSE,message=FALSE,results='asis',fig.height=4.8>>=
load("amyloid_seqs.RData")

nice_tar <- rf_dat[, 11]
levels(nice_tar) <- c("nie", "tak")

lenghts <- data.frame(len = as.factor(10 - apply(rf_dat[, -11], 1, function(i) sum(is.na(i)))),
                      Amyloid = nice_tar)

ggplot(lenghts, aes(x = len, fill = Amyloid)) + 
  geom_bar(position = "dodge") +
  scale_x_discrete("Długość peptydu") +
  scale_y_continuous("Liczba peptydów") +
  scale_fill_hue(l=70, c=150) +
  theme_presentation

@


\end{frame}


\begin{frame}


<<echo = FALSE,message=FALSE,results='asis',fig.height=5.5>>=
unis <- table_ngrams(as.matrix(rf_dat[, -11]), paste0(create_ngrams(1, a()[-1]), "_0"), target = as.numeric(rf_dat[, 11]) - 1)
munis <- melt(unis)
levels(munis[, "ngram"]) <- substr(levels(munis[, "ngram"]), 0, 1)
#munis[, "ngram"] <- factor(munis[, "ngram"], levels = levels(munis[, "ngram"])[order(abs(unis[, "target0"] - unis[, "target1"]), decreasing = TRUE)])
levels(munis[, "variable"]) <- c("nie", "tak")
ggplot(munis, aes(x = ngram, fill = variable, y = value)) + 
  geom_bar(position = "dodge", stat="identity") +
  scale_fill_hue("Amyloid", l=70, c=150) +
  scale_x_discrete("1-gram") +
  scale_y_continuous("Liczba 1-gramów") +
  theme_presentation
@

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,results='asis',fig.height=5.5>>=
unis <- table_ngrams(as.matrix(rf_dat[, -11]), paste0(create_ngrams(1, a()[-1]), "_0"), target = as.numeric(rf_dat[, 11]) - 1)

lengths <- 10 - apply(rf_dat[, -11], 1, function(i) sum(is.na(i)))

#number of amino acids
n_aa <- sapply(levels(rf_dat[, 11]), function(i) sum(lengths[rf_dat[, 11] == i]))
unis[["target0"]] <- unis[["target0"]]/n_aa["neg"]
unis[["target1"]] <- unis[["target1"]]/n_aa["pos"]


munis <- melt(unis)
levels(munis[, "ngram"]) <- substr(levels(munis[, "ngram"]), 0, 1)


#munis[, "ngram"] <- factor(munis[, "ngram"], levels = levels(munis[, "ngram"])[order(abs(unis[, "target0"] - unis[, "target1"]), decreasing = TRUE)])
levels(munis[, "variable"]) <- c("nie", "tak")
ggplot(munis, aes(x = ngram, fill = variable, y = value)) + 
  geom_bar(position = "dodge", stat="identity") +
  scale_fill_hue("Amyloid", l=70, c=150) +
  scale_x_discrete("1-gram") +
  scale_y_continuous("Częstość 1-gramów") +
  theme_presentation
@

\end{frame}


\begin{frame}

<<echo = FALSE,message=FALSE,warning=FALSE,results='asis',fig.height=5.5>>=

bigrams <- cbind(as.matrix(count_ngrams(as.matrix(rf_dat[, -11]), 2, a()[-1], d = 0)),
                 as.matrix(count_ngrams(as.matrix(rf_dat[, -11]), 2, a()[-1], d = 1)),
                 as.matrix(count_ngrams(as.matrix(rf_dat[, -11]), 2, a()[-1], d = 2)),
                 as.matrix(count_ngrams(as.matrix(rf_dat[, -11]), 2, a()[-1], d = 3)),
                 as.matrix(count_ngrams(as.matrix(rf_dat[, -11]), 2, a()[-1], d = 4))) > 0
storage.mode(bigrams) <- "integer"

test_bis <- test_features(as.numeric(rf_dat[, 11]) - 1, 
                          bigrams)
imp_bigrams <- cut(test_bis, breaks = c(0, 0.001, 1))[[1]]

bis <- table_ngrams(as.matrix(rf_dat[, -11]), cut(test_bis, breaks = c(0, 0.05, 1))[[1]], target = as.numeric(rf_dat[, 11]) - 1)

lengths_bis <- 9 - apply(rf_dat[, -11], 1, function(i) sum(is.na(i)))
n_bigrams <- sapply(levels(rf_dat[, 11]), function(i) sum(lengths_bis[rf_dat[, 11] == i]))

bis[["target0"]] <- bis[["target0"]]/n_bigrams["neg"]
bis[["target1"]] <- bis[["target1"]]/n_bigrams["pos"]


mbis <- melt(bis)
#levels(mbis[, "ngram"]) <- decode_ngrams(levels(mbis[, "ngram"]))
levels(mbis[, "variable"]) <- c("nie", "tak")
levels(mbis[, "variable"]) <- c("nie", "tak")
ggplot(mbis, aes(x = ngram, fill = variable, y = value)) + 
  geom_bar(position = "dodge", stat="identity") +
  scale_fill_hue("Amyloid", l=70, c=150) +
  scale_x_discrete("2-gram") +
  scale_y_continuous("Częstość istotnych 2-gramów") +
  theme_presentation
@

\end{frame}


\end{frame}

\begin{frame}

\tiny{
      \bibliographystyle{apalike}
      \bibliography{amyloid_present}
    }


\end{frame}

\end{document}